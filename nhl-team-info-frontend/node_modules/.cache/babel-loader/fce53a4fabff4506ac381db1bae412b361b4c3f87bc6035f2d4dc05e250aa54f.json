{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./teams.css';import{useNavigate}from'react-router-dom';import{urlConfig}from'../../config';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Teams(){const[teams,setTeams]=useState([]);const[isLoading,setIsLoading]=useState(true);// Add a loading state\nconst navigate=useNavigate();useEffect(()=>{// fetch all teams\nconst fetchTeams=async()=>{try{let url=\"\".concat(urlConfig.backendUrl,\"/api/teams\");const response=await fetch(url);if(!response.ok){throw new Error(\"HTTP error; \".concat(response.status));}const data=await response.json();console.log(data);if(data){setTeams(data);}setIsLoading(false);}catch(error){console.log('Fetch error: '+error.message);}};fetchTeams();},[]);const goToDetailsPage=teamId=>{navigate(\"/app/teams/\".concat(teamId));};if(isLoading){return/*#__PURE__*/_jsx(\"h1\",{children:\"Loading...\"});}else{let metro=[],atlantic=[],central=[],pacific=[];// TODO: more elegant implementation than a series of if statements\nfor(var i=0;i<teams.length;i++){if(teams[i].divisionName===\"Metropolitan\"){metro.push(teams[i]);}else if(teams[i].divisionName===\"Atlantic\"){atlantic.push(teams[i]);}else if(teams[i].divisionName===\"Central\"){central.push(teams[i]);}else if(teams[i].divisionName===\"Pacific\"){pacific.push(teams[i]);}else{console.error(\"Unknown division: \"+teams[i].divisionName);}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"NHL Teams\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"conferences\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"eastern\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Eastern Conference\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Metropolitan Division\"}),/*#__PURE__*/_jsx(\"ul\",{children:metro.map(team=>/*#__PURE__*/_jsxs(\"li\",{class:\"team\",onClick:()=>goToDetailsPage(team.teamAbbrev.default),children:[/*#__PURE__*/_jsx(\"img\",{class:\"team-icon\",src:team.teamLogo,alt:\"team logo\"}),team.teamName.default,\" (\",team.teamAbbrev.default,\")\",/*#__PURE__*/_jsx(\"span\",{class:\"arrow\",children:\" \\u2197\"})]},team.teamAbbrev.default))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Atlantic Divison\"}),/*#__PURE__*/_jsx(\"ul\",{children:atlantic.map(team=>/*#__PURE__*/_jsxs(\"li\",{class:\"team\",onClick:()=>goToDetailsPage(team.teamAbbrev.default),children:[/*#__PURE__*/_jsx(\"img\",{class:\"team-icon\",src:team.teamLogo,alt:\"team logo\"}),team.teamName.default,\" (\",team.teamAbbrev.default,\")\",/*#__PURE__*/_jsx(\"span\",{class:\"arrow\",children:\" \\u2197\"})]},team.teamAbbrev.default))})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"western\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Western Conference\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Central Division\"}),/*#__PURE__*/_jsx(\"ul\",{children:central.map(team=>/*#__PURE__*/_jsxs(\"li\",{class:\"team\",onClick:()=>goToDetailsPage(team.teamAbbrev.default),children:[/*#__PURE__*/_jsx(\"img\",{class:\"team-icon\",src:team.teamLogo,alt:\"team logo\"}),team.teamName.default,\" (\",team.teamAbbrev.default,\")\",/*#__PURE__*/_jsx(\"span\",{class:\"arrow\",children:\" \\u2197\"})]},team.teamAbbrev.default))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Pacific Division\"}),/*#__PURE__*/_jsx(\"ul\",{children:pacific.map(team=>/*#__PURE__*/_jsxs(\"li\",{class:\"team\",onClick:()=>goToDetailsPage(team.teamAbbrev.default),children:[/*#__PURE__*/_jsx(\"img\",{class:\"team-icon\",src:team.teamLogo,alt:\"team logo\"}),team.teamName.default,\" (\",team.teamAbbrev.default,\")\",/*#__PURE__*/_jsx(\"span\",{class:\"arrow\",children:\" \\u2197\"})]},team.teamAbbrev.default))})]})]})]});}}export default Teams;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","urlConfig","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Teams","teams","setTeams","isLoading","setIsLoading","navigate","fetchTeams","url","concat","backendUrl","response","fetch","ok","Error","status","data","json","console","log","error","message","goToDetailsPage","teamId","children","metro","atlantic","central","pacific","i","length","divisionName","push","class","map","team","onClick","teamAbbrev","default","src","teamLogo","alt","teamName"],"sources":["C:/Users/andre/Documents/repos/nhl-team-info/nhl-team-info-frontend/src/components/teams/teams.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './teams.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {urlConfig} from '../../config';\r\n\r\nfunction Teams() {\r\n    const [teams, setTeams] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true); // Add a loading state\r\n    const navigate = useNavigate();\r\n    \r\n\r\n    useEffect(() => {\r\n      // fetch all teams\r\n      const fetchTeams = async () => {\r\n          try {\r\n              let url = `${urlConfig.backendUrl}/api/teams`;\r\n              const response = await fetch(url);\r\n              if (!response.ok) {\r\n                  throw new Error(`HTTP error; ${response.status}`)\r\n              }\r\n              const data = await response.json();\r\n              console.log(data);\r\n              if(data) {\r\n                setTeams(data);\r\n              }\r\n              setIsLoading(false);\r\n          } catch (error) {\r\n              console.log('Fetch error: ' + error.message);\r\n          }\r\n      };\r\n\r\n      fetchTeams();\r\n  }, []);\r\n\r\n  const goToDetailsPage = (teamId) => {\r\n    navigate(`/app/teams/${teamId}`); \r\n  }; \r\n  \r\n\r\n  if (isLoading) {\r\n      return <h1>Loading...</h1>;\r\n  } else {\r\n      let metro = [], atlantic = [], central = [], pacific = [];\r\n      // TODO: more elegant implementation than a series of if statements\r\n      for(var i=0; i<teams.length; i++) {\r\n        if(teams[i].divisionName === \"Metropolitan\") {\r\n          metro.push(teams[i]);\r\n        }\r\n        else if(teams[i].divisionName === \"Atlantic\") {\r\n          atlantic.push(teams[i]);\r\n        }\r\n        else if(teams[i].divisionName === \"Central\") {\r\n          central.push(teams[i]);\r\n        }\r\n        else if(teams[i].divisionName === \"Pacific\") {\r\n          pacific.push(teams[i]);\r\n        }\r\n        else {\r\n          console.error(\"Unknown division: \" + teams[i].divisionName);\r\n        }\r\n      }\r\n      return (\r\n        <>\r\n          <h1>NHL Teams</h1>\r\n          <div class=\"conferences\">\r\n            <div class=\"eastern\">\r\n              <h2>Eastern Conference</h2>\r\n              <h3>Metropolitan Division</h3>\r\n              <ul>\r\n                {metro.map(team => (\r\n                    <li key={team.teamAbbrev.default} class=\"team\" onClick={() => goToDetailsPage(team.teamAbbrev.default)}><img class=\"team-icon\" src={team.teamLogo} alt=\"team logo\"></img>{team.teamName.default} ({team.teamAbbrev.default})<span class=\"arrow\"> ↗</span></li>\r\n                ))}\r\n              </ul>\r\n              <h3>Atlantic Divison</h3>\r\n              <ul>\r\n                {atlantic.map(team => (\r\n                    <li key={team.teamAbbrev.default} class=\"team\" onClick={() => goToDetailsPage(team.teamAbbrev.default)}><img class=\"team-icon\" src={team.teamLogo} alt=\"team logo\"></img>{team.teamName.default} ({team.teamAbbrev.default})<span class=\"arrow\"> ↗</span></li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div class=\"western\">\r\n              <h2>Western Conference</h2>\r\n                <h3>Central Division</h3>\r\n                <ul>\r\n                  {central.map(team => (\r\n                    <li key={team.teamAbbrev.default} class=\"team\" onClick={() => goToDetailsPage(team.teamAbbrev.default)}><img class=\"team-icon\" src={team.teamLogo} alt=\"team logo\"></img>{team.teamName.default} ({team.teamAbbrev.default})<span class=\"arrow\"> ↗</span></li>\r\n                  ))}\r\n                </ul>\r\n                \r\n                <h3>Pacific Division</h3>\r\n                <ul>\r\n                {pacific.map(team => (\r\n                  <li key={team.teamAbbrev.default} class=\"team\" onClick={() => goToDetailsPage(team.teamAbbrev.default)}><img class=\"team-icon\" src={team.teamLogo} alt=\"team logo\"></img>{team.teamName.default} ({team.teamAbbrev.default})<span class=\"arrow\"> ↗</span></li>\r\n                ))}\r\n                </ul>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Teams;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}