{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Documents\\\\repos\\\\nhl-team-info\\\\nhl-team-info-frontend\\\\src\\\\components\\\\StanleyCupSim\\\\StanleyCupSim.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StanleyCupSim() {\n  _s();\n  const teams = useSelector(state => state.teams);\n  const [selectedTeam, setSelectedTeam] = useState(\"TOR\");\n  const selectTeam = teamAbbrev => {\n    setSelectedTeam(teamAbbrev);\n  };\n  const runSim = selectedTeam => {\n    // grab the selected team's win %, which exists as a property in the json (winPctg)\n    const selectedTeamWinPctg = teams.find(team => team.teamAbbrev.default === selectedTeam).winPctg;\n    let wins = 0;\n    let losses = 0;\n\n    // loop over the list of teams and if the team isn't the selected team, \"play a game\"\n    teams.forEach(team => {\n      if (team.teamAbbrev.default !== selectedTeam) {\n        // \"play a game\" means to take the selected team's win % minus the opponents win % and add that to 50%\n        const winProbability = 50 + (selectedTeamWinPctg - team.winPctg);\n\n        // then get a random whole number from 0-100. If the calculated win % is greater than the random number, record a win\n        const randomNum = Math.floor(Math.random() * 101);\n        if (winProbability > randomNum) {\n          wins++;\n        } else {\n          // else, record a loss\n          losses++;\n        }\n      }\n    });\n    console.log(`Wins: ${wins}, Losses: ${losses}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Stanley Cup Simulator!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Note: This isn't a proper Stanley Cup simulation at the moment. Instead, your selected team faces off once against all other teams and the \\\"season\\\" results are posted back to you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose a Team!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: teams.map(team => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"team\",\n            onClick: () => selectTeam(team.teamAbbrev.default),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"team-icon\",\n              src: team.teamLogo,\n              alt: \"team logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 132\n            }, this), team.teamName.default, \" (\", team.teamAbbrev.default, \")\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"arrow\",\n              children: \" \\u2197\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 252\n            }, this)]\n          }, team.teamAbbrev.default, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Selected Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedTeam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => runSim(selectedTeam),\n          children: \"Run Simulation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(StanleyCupSim, \"p+AhOKgkYCwXI/pb74KwWIFq7Tw=\", false, function () {\n  return [useSelector];\n});\n_c = StanleyCupSim;\nexport default StanleyCupSim;\nvar _c;\n$RefreshReg$(_c, \"StanleyCupSim\");","map":{"version":3,"names":["React","useState","useSelector","jsxDEV","_jsxDEV","StanleyCupSim","_s","teams","state","selectedTeam","setSelectedTeam","selectTeam","teamAbbrev","runSim","selectedTeamWinPctg","find","team","default","winPctg","wins","losses","forEach","winProbability","randomNum","Math","floor","random","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","teamLogo","alt","teamName","_c","$RefreshReg$"],"sources":["C:/Users/andre/Documents/repos/nhl-team-info/nhl-team-info-frontend/src/components/StanleyCupSim/StanleyCupSim.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction StanleyCupSim() {\r\n    const teams = useSelector((state) => state.teams);\r\n    const [selectedTeam, setSelectedTeam] = useState(\"TOR\");\r\n\r\n    const selectTeam = (teamAbbrev) => {\r\n        setSelectedTeam(teamAbbrev);  \r\n      };\r\n    \r\n      const runSim = (selectedTeam) => {\r\n        // grab the selected team's win %, which exists as a property in the json (winPctg)\r\n        const selectedTeamWinPctg = teams.find(team => team.teamAbbrev.default === selectedTeam).winPctg;\r\n    \r\n        let wins = 0;\r\n        let losses = 0;\r\n    \r\n        // loop over the list of teams and if the team isn't the selected team, \"play a game\"\r\n        teams.forEach(team => {\r\n            if (team.teamAbbrev.default !== selectedTeam) {\r\n                // \"play a game\" means to take the selected team's win % minus the opponents win % and add that to 50%\r\n                const winProbability = 50 + (selectedTeamWinPctg - team.winPctg);\r\n    \r\n                // then get a random whole number from 0-100. If the calculated win % is greater than the random number, record a win\r\n                const randomNum = Math.floor(Math.random() * 101);\r\n                if (winProbability > randomNum) {\r\n                    wins++;\r\n                } else {\r\n                    // else, record a loss\r\n                    losses++;\r\n                }\r\n            }\r\n        });\r\n    \r\n        console.log(`Wins: ${wins}, Losses: ${losses}`);\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <h1>Welcome to the Stanley Cup Simulator!</h1>\r\n            <p>Note: This isn't a proper Stanley Cup simulation at the moment. Instead, your selected team faces off once against all other teams and the \"season\" results are posted back to you.</p>\r\n            <div className=\"team-info\">\r\n                <div className=\"details\">\r\n                    <h2>Choose a Team!</h2>\r\n                    <ul>\r\n                        {teams.map(team => (\r\n                            <li key={team.teamAbbrev.default} className=\"team\" onClick={() => selectTeam(team.teamAbbrev.default)}><img className=\"team-icon\" src={team.teamLogo} alt=\"team logo\"></img>{team.teamName.default} ({team.teamAbbrev.default})<span className=\"arrow\"> â†—</span></li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"details\">\r\n                    <h2>Selected Team</h2>\r\n                    <p>{selectedTeam}</p>\r\n                    <button onClick={() => runSim(selectedTeam)}>Run Simulation!</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StanleyCupSim;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}